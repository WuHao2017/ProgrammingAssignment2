setwd("C:/Users/Wu Hao/Desktop/Wu Hao/03-Education/DataScience/Coursera")
list.files("specdata")
files_all <- paste(directory, list.files(directory), sep = "/")
files_all <- paste("specdata", list.files("specdata"), sep = "/")
files_selected <- files_all[1:2]
n <- length(files_selected)
id <- c(1:2)
for (i in 1:n)  {
x <- read.csv(files_selected[i])  ## the i has problem, should be 23
nobs[i] <- length(complete.cases(read.csv(files_selected[i])))
}
complete.cases(read.csv(files_selected[1]))
length(complete.cases(read.csv(files_selected[1])))
nobs[1] <- length(complete.cases(read.csv(files_selected[1])))
nob(1) <- length(complete.cases(read.csv(files_selected[1])))
nobs(1) <- length(complete.cases(read.csv(files_selected[1])))
nobs <- c(1:2)
nobs[1] <- length(complete.cases(read.csv(files_selected[1])))
nobs[2] <- length(complete.cases(read.csv(files_selected[2])))
data.frame(id, nobs)
?cor
cor()
q()
?data.frame
x <- dataframe(Min., 1st Qu., Median, Mean, 3rd Qu., Max.)
x <- dataframe("x", "y")
x <- dataframe(x, y)
x <- dataframe(y, z)
q()
x <- data.frame(y, z)
y <- c()
z <- c()
x <- data.frame(y, z)
x
y <- c(1, 2, 3)
z <- c("a", "b", "c")
x
x <- data.frame(y, z)
x
print(R.version.string)
?head
head(cr)
head(x)
x
head(x)
?summary(x)
summary(x)
?c
?cor
files_all <- past("specdata", list.files("specdata"), sep = "/")
files_all <- paste("specdata", list.files("specdata"), sep = "/")
x <- read.csv(files_all[1])
x
good <- complete.cases(x)
x[good, ]
cor(y)
cor(y[2, ], y[3, ])
cor(y[2], y[3])
cor(y[sulfate], y[nitrate])
y[2]
y <- x[good, ]
y
cor(y[sulfate], y[nitrate])
cor(y)
cor(y[2], y[3])
y[2]
y[3]
?cor
?median
?cor
q()
cor(1:10, 3:12)
?head
?summary
?cor
files_all <- paste("specdata", list.files("specdata"), sep = "/")
files_all
read.csv("specdata/001.csv")
print (R.version.string)
source('corr.R')
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
h <- read.csv("specdata/001.csv")
h
good1 <- complete.cases(h)
cor(good1[ , 2], good1[, 3])
cor(good1[2], good1[3])
cor(good1[2, ], good1[3, ])
?datafrom
?data.frame
cor(good1(sulfate), good1(nitrate))
cor(good1[sulfate], good1[nitrate])
h <- read.csv("specdata/001.csv")
good1 <- complete.cases(h)
good[2]
good1[2]
good1[sulfate]
good1[ ,sulfate]
good1
h
h <- read.csv("specdata/001.csv")
good1 <- complete.cases(h)
good2 <- nrow(x[good, ])
good2 <- nrow(h[good, ])
good2 <- nrow(h[good1, ])
good2
h
h <- read.csv("specdata/001.csv")
h
h[sulfate]
h(sulfate)
h
h[ ,sulfate]
h( ,sulfate)
h( , 2)
h(2)
h
h$sulfate
h$nitrate
x <- read.csv("specdata/001.csv")
good <- complete.cases(x)
r <- nrow(x[good, ])
r
good
x[good, ]
x$sulfate
x[good, sulfate]
x[good, ]
x[good, ]$sulfate
x[good, ]$nitrate
cor(x[good, ]$sulfate, x[good, ]$nitrate)
x[good, 2]
x[good, 3]
cor(x[good, 2], x[good, 3])
x[good, "sulfate"]
print(R.version.string)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
source("pollutantmean.R")
pollutantmean()
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
?set.seed
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(ccluse, "nobs")
print(cc[use, "nobs"])
cc <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr('specdata', 2000)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
q()
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
class
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_collors[1:6])
head(flag_colors[1:6])
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
load(swirl)
library(swirl)
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
q()
library(datasets)
data(iris)
?iris
iris
View(iris)
View(iris)
?subset
subset(iris, Species == "virginica", select = -Sepal.Length)
subset(iris, Species == "virginica", select = c(Sepal.Length))
subset(iris, Species == "virginica", select = Sepal.Length)
subset(iris, Species == "virginica", select = Sepal.Length:Petal.Length)
subset(iris, Species == "virginica", select = Sepal.Length)
?mean
Mean(subset(iris, Species == "virginica", select = Sepal.Length))
mean(subset(iris, Species == "virginica", select = Sepal.Length))
mode(subset(iris, Species == "virginica", select = Sepal.Length))
mode(subset(iris, Species == "virginica", select = Sepal.Length)[1])
mode(subset(iris, Species == "virginica", select = Sepal.Length)[,1])
mean(subset(iris, Species == "virginica", select = Sepal.Length)[,1])
mean(subset(iris, Species == "virginica", select = Sepal.Length)[1:50,])
mean(subset(iris, Species == "virginica", select = Sepal.Length)[1:50,1])
mean(subset(iris, Species == "virginica", select = Sepal.Length)[1:50,2])
apply(iris, 1, mean)
apply(iris, 2, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
rowMeans(iris[,1:4])
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
micars
tapply(iris$Sepal.Length, iris$Species, mean)
?mean
?mtcars
?split
?with
tapply(Sepal.Length, Species, mean)
with(tapply(Sepal.Length, Species, mean))
with(iris, tapply(Sepal.Length, Species, mean))
?mtcars
View(mtcars)
View(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
debug(ls)
ls
ls
ls
ls
1
ls
?debug
?mtcars
sapply(split(mtcars$hp, mtcars$cyl), mean)
?function
q()
?solve
q()
TestAssignment2.R
source('C:/Users/Wu Hao/Desktop/Wu Hao/03-Education/DataScience/Coursera/TestAssignment2.R')
m1 <- matrix(c(1/2, -1/4, -1, 3/4), nrow = 2, ncol = 2)
m1
test <- MakeMatrix(m1)
cachematrix(test)
source('C:/Users/Wu Hao/Desktop/Wu Hao/03-Education/DataScience/Coursera/TestAssignment2.R')
test <- MakeMatrix(m1)
test[1]
cachematrix(test)
m1
m1
solve(m1)
cachematrix(test)
cachematrix(test)
source('C:/Users/Wu Hao/Desktop/Wu Hao/03-Education/DataScience/Coursera/TestAssignment2.R')
m1
test <- MakeMatrix(m1)
cachematrix(test)
setwd("C:/Users/Wu Hao/Desktop/Wu Hao/03-Education/DataScience/Coursera/ProgrammingAssignment2")
cachematrix(test)
test$set(matrix(c(1/2, -1/4, -1, 3/4), nrow = 2, ncol = 2))
cachematrix(test)
test$set(matrix(c(6, 2, 8, 4), nrow = 2, ncol = 2))
cachematrix(test)
source('C:/Users/Wu Hao/Desktop/Wu Hao/03-Education/DataScience/Coursera/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Wu Hao/Desktop/Wu Hao/03-Education/DataScience/Coursera/ProgrammingAssignment2/cachematrix.R')
matrixdata <- m1
matrixdata
makeCacheMatrix(matrixdata)
matrixdata <- makeCacheMatrix(m1)
matrixdata
cachematrix(matrixdata)
cachematrix(matrixdata)
cachematrix(matrixdata)
q()
